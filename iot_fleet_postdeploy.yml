---
- name: Retail-edge Windows IoT VM deployment playbook
  hosts: all # use ansible-playbook -l group to limit application to specific groups - has tab completion for -l !
  connection: ansible.builtin.local
  gather_facts: false
  strategy: host_pinned # free  #allows each cluster to start next task before all clusters have finished current task
  environment:  #if set here - hypercore modules will automatically use this for each remote cluster - avoiding need to specify cluster_instance for each test
    SC_HOST: "https://{{ inventory_hostname }}"
    SC_USERNAME: "{{ scale_user }}"
    SC_PASSWORD: "{{ scale_pass }}"
    SC_TIMEOUT: 60

  # roles:
  #   - iot

  tasks:
  #run windows in guest configuration playbooks here
  - name:  windows vm host rename via win rm - smb configuration using hypercore VM inventory plugin - when vm is created
    ansible.builtin.command: ansible-playbook -i ./inventory/hypercore_vm_inventory_windows.yml windows_rename.yml -vvv  #uses hypercore inventory plugin for each cluster (based on environment)
    ignore_errors: yes 
 #   when: iot.changed
    #async: 2400
    #poll: 60 

  - name:  windows vm host  - smb configuration and azure registration using hypercore VM inventory plugin
    ansible.builtin.command: ansible-playbook -i ./inventory/hypercore_vm_inventory_windows.yml windows_iot_config.yml -vvv  #uses hypercore inventory plugin for each cluster (based on environment)
    ignore_errors: yes 
#    when: iot.changed # to always run / check 
    #async: 2400
    #poll: 60 