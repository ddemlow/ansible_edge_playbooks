---
# tasks file for AlertSMTPConfig - set smtp if empty

  # - name: delete to update AlertSMTPConfig for testing - not full UUID delete though
  #   scale_computing.hypercore.api:
  #     action: delete  # or patch? post works - but could patch AlertSMTPConfig_guid
  #     cluster_instance:
  #       host: "https://{{ inventory_hostname }}"
  #       username: "{{ scale_user }}"
  #       password: "{{ scale_pass }}"
  #     endpoint: /rest/v1/AlertSMTPConfig/smtpconfig_guid

- name: Get SMTP configuration 
  scale_computing.hypercore.smtp_info:
  register: smtp

# - name: debug smtp
#   debug:
#     var: smtp

- name: Post to create AlertSMTPConfig guid if empty 
  scale_computing.hypercore.api:
    action: post  
    cluster_instance:
      host: "https://{{ inventory_hostname }}"
      username: "{{ scale_user }}"
      password: "{{ scale_pass }}"
    endpoint: /rest/v1/AlertSMTPConfig
    data:
      smtpServer: "{{ smtpServer }}"
      port: "{{ smtpport }}"
      useSSL: "{{ smtpuseSSL }}"
      useAuth: "{{ smtpuseAuth }}"
      authUser: "{{ smtpauthUser }}"
      authPassword: "{{ smtpauthPassword }}"
      fromAddress: "{{ smtpfromAddress }}"
  when:  smtp.record | length == 0


- name: Modify SMTP configuration (authorization disabled)
  scale_computing.hypercore.smtp:
    server: "{{ smtpServer }}"
    port: "{{ smtpport }}"
    use_ssl: "{{ smtpuseSSL }}"
    use_auth: "{{ smtpuseAuth }}"
    from_address: "{{ smtpfromAddress }}"

# tasks file for AlertSMTPConfig - set smtp if empty

  # - name: delete to update AlertSMTPConfig for testing
  #   scale_computing.hypercore.api:
  #     action: delete  # or patch? post works - but could patch AlertSMTPConfig_guid
  #     cluster_instance:
  #       host: "https://{{ inventory_hostname }}"
  #       username: "{{ scale_user }}"
  #       password: "{{ scale_pass }}"
  #     endpoint: /rest/v1/AlertSMTPConfig/smtpconfig_guid

  # - name: Get hypercore AlertSMTPConfig object using REST api # single uuid record.AlertSMTPConfig 
  #   scale_computing.hypercore.api:
  #     action: get
  #     cluster_instance:
  #       host: "https://{{ inventory_hostname }}"
  #       username: "{{ scale_user }}"
  #       password: "{{ scale_pass }}"
  #     endpoint: /rest/v1/AlertSMTPConfig
  #   register: AlertSMTPConfig

  # - name: Check if AlertSMTPConfig is currently else set_fact update_smtp empty
  #   ansible.builtin.set_fact:
  #     update_smtp: empty
  #   when: AlertSMTPConfig.record == []



