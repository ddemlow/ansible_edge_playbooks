---
- name: Example - how to generate private keys and sign certificates with openSSL and upload to HyperCore server
  hosts: all
  connection: local
  gather_facts: false
  environment:  # if set here - hypercore modules will automatically use this for each remote cluster - avoiding need to specify cluster_instance for each test
    SC_HOST: "https://{{ inventory_hostname }}"
    SC_USERNAME: "{{ scale_user }}"
    SC_PASSWORD: "{{ scale_pass }}"
    SC_TIMEOUT: 120  
  vars:
    hypercore_example_check_mode: "{{ ansible_check_mode }}"

  tasks:
    - name: get cluster name 
      scale_computing.hypercore.cluster_info:
      register: cluster_info


    # More info about openssl_privatekey module
    # (https://docs.ansible.com/ansible/latest/collections/community/crypto/openssl_privatekey_module.html)
    - name: generate private key with openSSL
      community.crypto.openssl_privatekey:
        path: private_key_example.pem

    # More info about openssl_csr module
    # (https://docs.ansible.com/ansible/latest/collections/community/crypto/openssl_csr_module.html#parameter-authority_cert_issuer)
    - name: Generate an OpenSSL Certificate Signing Request
      community.crypto.openssl_csr:
        path: csr_example.csr
        privatekey_path: private_key_example.pem
        common_name: "{{ cluster_info.record.name }}"
        country_name: US
        organization_name: Scale Computing Inc.
        organizational_unit_name: Engineering Product Strategy
        email_address: dave@scalecomputing.com
        state_or_province_name: IN
        locality_name: Westfield

    # More info about x509_certificate module
    # (https://docs.ansible.com/ansible/latest/collections/community/crypto/x509_certificate_module.html#ansible-collections-community-crypto-x509-certificate-module)
    - name: Generate a Self Signed OpenSSL certificate with generated private_key and certificate signing request
      community.crypto.x509_certificate:
        path: certificate_example.crt
        csr_path: csr_example.csr
        privatekey_path: private_key_example.pem
        provider: selfsigned

    - name: upload generated certificate and private_key with certificate module
      scale_computing.hypercore.certificate:
        private_key: "{{ lookup('file', 'private_key_example.pem') }}"
        certificate: "{{ lookup('file', 'certificate_example.crt') }}"
      register: certificate_info
      # This is problematic, it would restart API server
#      check_mode: "{{ hypercore_example_check_mode }}"

    - name: Show uploaded certificate info
      debug:
        var: certificate_info