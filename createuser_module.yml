- name: Create ansible user with admin role using hypercore.user module
  hosts: edge # use ansible-playbook -l group to limit application to specific groups
  connection: local
  strategy: free # host_pinned # free  #allows each cluster to start next task before all clusters have finished current task
  environment:  #if set here - hypercore modules will automatically use this for each remote cluster - avoiding need to specify cluster_instance for each test
    SC_HOST: "https://{{ inventory_hostname }}"
    SC_USERNAME: "{{ scale_admin_user }}"
    SC_PASSWORD: "{{ scale_admin_pass }}"

  tasks:
 
  - name: Create ansible user account
    scale_computing.hypercore.user:
      state: present
      username: ansible
      password: ansible
      full_name: ansible
      session_limit: 0
      roles:
        - Admin
    async: 60
    poll: 0
    changed_when: false #password specified always results in change - this blocks that

  # - name: Create acronis user account
  #   scale_computing.hypercore.user:
  #     state: present
  #     username: acronis
  #     password: acronis
  #     full_name: acronis
  #     session_limit: 0
  #     roles:
  #       - Backup
  #       - VM Create/Edit
  #       - VM Power Controls
  #   async: 60
  #   poll: 0
  #   changed_when: false
        

  # - name: remove former users
  #   scale_computing.hypercore.user:
  #     state: absent
  #     username: "{{ item }}"
  #   loop:
  #     - bcnu 
  #     - badIT
  #     - byebye
  #   async: 60
  #   poll: 0
  #   changed_when: false
